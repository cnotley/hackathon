{
  "Comment": "MSA Invoice Auditing Workflow - MVP",
  "StartAt": "ExtractData",
  "States": {
    "ExtractData": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${ExtractionLambdaArn}",
        "Payload": {
          "bucket.$": "$.bucket",
          "key.$": "$.key"
        }
      },
      "ResultPath": "$.extraction",
      "Next": "Reconcile",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ExtractionFailed",
          "ResultPath": "$.error"
        }
      ]
    },
    "Reconcile": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${ReconciliationLambdaArn}",
        "Payload": {
          "extracted_data.$": "$.extraction.Payload",
          "vendor.$": "$.extraction.Payload.vendor",
          "bucket.$": "$.bucket",
          "key.$": "$.key"
        }
      },
      "ResultPath": "$.reconciliation",
      "Next": "GenerateReport",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ReconciliationFailed",
          "ResultPath": "$.error"
        }
      ]
    },
    "GenerateReport": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${ReportLambdaArn}",
        "Payload": {
          "extracted_data.$": "$.extraction.Payload",
          "reconciliation.$": "$.reconciliation.Payload",
          "vendor.$": "$.reconciliation.Payload.vendor",
          "bucket.$": "$.bucket",
          "key.$": "$.key"
        }
      },
      "ResultPath": "$.report",
      "Next": "AuditComplete",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ReportGenerationFailed",
          "ResultPath": "$.error"
        }
      ]
    },
    "AuditComplete": {
      "Type": "Succeed",
      "Comment": "MSA invoice audit completed successfully"
    },
    "ExtractionFailed": {
      "Type": "Fail",
      "Comment": "Data extraction from invoice failed"
    },
    "ReconciliationFailed": {
      "Type": "Fail",
      "Comment": "MSA reconciliation failed"
    },
    "ReportGenerationFailed": {
      "Type": "Fail",
      "Comment": "Report generation failed"
    }
  }
}
