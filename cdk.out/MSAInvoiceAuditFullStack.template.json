{
 "Description": "Minimal infrastructure for the invoice auditing prototype",
 "Resources": {
  "IngestionBucket917A3A3A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": {
     "Fn::Join": [
      "",
      [
       "invoice-ingestion-",
       {
        "Ref": "AWS::AccountId"
       },
       "-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 90,
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionBucket/Resource"
   }
  },
  "IngestionBucketPolicyA79CE1F0": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "IngestionBucket917A3A3A"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionBucket/Policy/Resource"
   }
  },
  "IngestionBucketAutoDeleteObjectsCustomResource190BFC3A": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "IngestionBucket917A3A3A"
    }
   },
   "DependsOn": [
    "IngestionBucketPolicyA79CE1F0"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "IngestionBucketNotificationsF5F9F5B4": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "IngestionBucket917A3A3A"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "IngestionLambdaEF25F265",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "IngestionBucketAllowBucketNotificationsToMSAInvoiceAuditFullStackIngestionLambda87DD999780825BA8"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionBucket/Notifications/Resource"
   }
  },
  "IngestionBucketAllowBucketNotificationsToMSAInvoiceAuditFullStackIngestionLambda87DD999780825BA8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IngestionLambdaEF25F265",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "IngestionBucket917A3A3A",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionBucket/AllowBucketNotificationsToMSAInvoiceAuditFullStackIngestionLambda87DD9997"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "IngestionBucket917A3A3A"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "MsaRatesTable67DF6646": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "rate_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "effective_date",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "rate_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "effective_date",
      "KeyType": "RANGE"
     }
    ],
    "TableName": "msa-rates",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/MsaRatesTable/Resource"
   }
  },
  "SeedMsaRatesFunctionServiceRoleBF3A5048": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesFunction/ServiceRole/Resource"
   }
  },
  "SeedMsaRatesFunctionServiceRoleDefaultPolicy55A58CBA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MsaRatesTable67DF6646",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "dynamodb:BatchWriteItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MsaRatesTable67DF6646",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SeedMsaRatesFunctionServiceRoleDefaultPolicy55A58CBA",
    "Roles": [
     {
      "Ref": "SeedMsaRatesFunctionServiceRoleBF3A5048"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SeedMsaRatesFunctionE46D1B4B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "87a5b8f93d8412910daabee5c0030d85d10f060fa4727d053884fb793e427a24.zip"
    },
    "Handler": "seed_msa_rates.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "SeedMsaRatesFunctionServiceRoleBF3A5048",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "SeedMsaRatesFunctionServiceRoleDefaultPolicy55A58CBA",
    "SeedMsaRatesFunctionServiceRoleBF3A5048"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesFunction/Resource",
    "aws:asset:path": "asset.87a5b8f93d8412910daabee5c0030d85d10f060fa4727d053884fb793e427a24",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SeedMsaRatesProviderframeworkonEventServiceRole874EED84": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "SeedMsaRatesProviderframeworkonEventServiceRoleDefaultPolicyF9877617": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SeedMsaRatesFunctionE46D1B4B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SeedMsaRatesFunctionE46D1B4B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SeedMsaRatesProviderframeworkonEventServiceRoleDefaultPolicyF9877617",
    "Roles": [
     {
      "Ref": "SeedMsaRatesProviderframeworkonEventServiceRole874EED84"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SeedMsaRatesProviderframeworkonEventC0015897": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (MSAInvoiceAuditFullStack/SeedMsaRatesProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SeedMsaRatesFunctionE46D1B4B",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "SeedMsaRatesProviderframeworkonEventServiceRole874EED84",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "SeedMsaRatesProviderframeworkonEventServiceRoleDefaultPolicyF9877617",
    "SeedMsaRatesProviderframeworkonEventServiceRole874EED84"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRatesProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SeedMsaRates": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SeedMsaRatesProviderframeworkonEventC0015897",
      "Arn"
     ]
    },
    "TableName": {
     "Ref": "MsaRatesTable67DF6646"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/SeedMsaRates/Default"
   }
  },
  "IngestionLambdaServiceRole18B9A982": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionLambdaServiceRole/Resource"
   }
  },
  "IngestionLambdaServiceRoleDefaultPolicy86B4BC08": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "InvoiceAuditStateMachine780A2967"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IngestionLambdaServiceRoleDefaultPolicy86B4BC08",
    "Roles": [
     {
      "Ref": "IngestionLambdaServiceRole18B9A982"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionLambdaServiceRole/DefaultPolicy/Resource"
   }
  },
  "IngestionLambdaEF25F265": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "IngestionBucket917A3A3A"
      },
      "STATE_MACHINE_ARN": {
       "Ref": "InvoiceAuditStateMachine780A2967"
      }
     }
    },
    "Handler": "ingestion_lambda.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "IngestionLambdaServiceRole18B9A982",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "IngestionLambdaServiceRoleDefaultPolicy86B4BC08",
    "IngestionLambdaServiceRole18B9A982"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/IngestionLambda/Resource",
    "aws:asset:path": "asset.a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ExtractionLambdaServiceRoleDA15206A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ExtractionLambdaServiceRole/Resource"
   }
  },
  "ExtractionLambdaServiceRoleDefaultPolicyE32A0518": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "textract:StartDocumentTextDetection",
        "textract:GetDocumentTextDetection"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ExtractionLambdaServiceRoleDefaultPolicyE32A0518",
    "Roles": [
     {
      "Ref": "ExtractionLambdaServiceRoleDA15206A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ExtractionLambdaServiceRole/DefaultPolicy/Resource"
   }
  },
  "ExtractionLambdaD112EB16": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "IngestionBucket917A3A3A"
      }
     }
    },
    "Handler": "extraction_lambda.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ExtractionLambdaServiceRoleDA15206A",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 600
   },
   "DependsOn": [
    "ExtractionLambdaServiceRoleDefaultPolicyE32A0518",
    "ExtractionLambdaServiceRoleDA15206A"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ExtractionLambda/Resource",
    "aws:asset:path": "asset.a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ReconciliationLambdaServiceRole063CCE63": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReconciliationLambdaServiceRole/Resource"
   }
  },
  "ReconciliationLambdaServiceRoleDefaultPolicy77411DEC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:Query"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MsaRatesTable67DF6646",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MsaRatesTable67DF6646",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ReconciliationLambdaServiceRoleDefaultPolicy77411DEC",
    "Roles": [
     {
      "Ref": "ReconciliationLambdaServiceRole063CCE63"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReconciliationLambdaServiceRole/DefaultPolicy/Resource"
   }
  },
  "ReconciliationLambda48A3990B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3.zip"
    },
    "Environment": {
     "Variables": {
      "MSA_RATES_TABLE_NAME": {
       "Ref": "MsaRatesTable67DF6646"
      }
     }
    },
    "Handler": "comparison_lambda.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ReconciliationLambdaServiceRole063CCE63",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "ReconciliationLambdaServiceRoleDefaultPolicy77411DEC",
    "ReconciliationLambdaServiceRole063CCE63"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReconciliationLambda/Resource",
    "aws:asset:path": "asset.a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ReportLambdaServiceRoleD526F028": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReportLambdaServiceRole/Resource"
   }
  },
  "ReportLambdaServiceRoleDefaultPolicyBC194FE2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutObject",
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ReportLambdaServiceRoleDefaultPolicyBC194FE2",
    "Roles": [
     {
      "Ref": "ReportLambdaServiceRoleD526F028"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReportLambdaServiceRole/DefaultPolicy/Resource"
   }
  },
  "ReportLambda9FE277D8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3.zip"
    },
    "Environment": {
     "Variables": {
      "REPORTS_BUCKET_NAME": {
       "Ref": "IngestionBucket917A3A3A"
      }
     }
    },
    "Handler": "report_lambda.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ReportLambdaServiceRoleD526F028",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ],
    "Timeout": 600
   },
   "DependsOn": [
    "ReportLambdaServiceRoleDefaultPolicyBC194FE2",
    "ReportLambdaServiceRoleD526F028"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/ReportLambda/Resource",
    "aws:asset:path": "asset.a8e27dda4e1ec2f05914c999588b1df863705f7290fd89934cdc05d036fe61a3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "InvoiceWorkflowRole8F28595C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::FindInMap": [
          "ServiceprincipalMap",
          {
           "Ref": "AWS::Region"
          },
          "states"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/InvoiceWorkflowRole/Resource"
   }
  },
  "InvoiceWorkflowRoleDefaultPolicy8AEA2F68": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionLambdaEF25F265",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionLambdaEF25F265",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ExtractionLambdaD112EB16",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ExtractionLambdaD112EB16",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ReconciliationLambda48A3990B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ReconciliationLambda48A3990B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ReportLambda9FE277D8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ReportLambda9FE277D8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InvoiceWorkflowRoleDefaultPolicy8AEA2F68",
    "Roles": [
     {
      "Ref": "InvoiceWorkflowRole8F28595C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/InvoiceWorkflowRole/DefaultPolicy/Resource"
   }
  },
  "InvoiceAuditStateMachine780A2967": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"IngestInvoice\",\"States\":{\"IngestInvoice\":{\"Next\":\"ExtractInvoiceData\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.ingestion\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "IngestionLambdaEF25F265",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"ExtractInvoiceData\":{\"Next\":\"ReconcileAgainstMsaRates\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.extraction\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ExtractionLambdaD112EB16",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"ingestion.$\":\"$.ingestion\"}}},\"ReconcileAgainstMsaRates\":{\"Next\":\"DiscrepanciesPresent\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.reconciliation\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ReconciliationLambda48A3990B",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"ingestion.$\":\"$.ingestion\",\"extraction.$\":\"$.extraction\"}}},\"DiscrepanciesPresent\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.reconciliation.Payload.discrepancies.total\",\"NumericGreaterThan\":0,\"Next\":\"AwaitHumanReview\"}],\"Default\":\"GenerateAuditReport\"},\"GenerateAuditReport\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.report\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ReportLambda9FE277D8",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"ingestion.$\":\"$.ingestion\",\"extraction.$\":\"$.extraction\",\"reconciliation.$\":\"$.reconciliation\"}}},\"AwaitHumanReview\":{\"Next\":\"GenerateAuditReport\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.humanReview\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke.waitForTaskToken\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ReconciliationLambda48A3990B",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"taskToken.$\":\"$$.Task.Token\",\"discrepancies.$\":\"$.reconciliation.Payload.discrepancies\"}}}},\"TimeoutSeconds\":3600}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "InvoiceWorkflowRole8F28595C",
      "Arn"
     ]
    },
    "StateMachineName": {
     "Fn::Join": [
      "",
      [
       "InvoiceAuditWorkflow-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "DependsOn": [
    "InvoiceWorkflowRoleDefaultPolicy8AEA2F68",
    "InvoiceWorkflowRole8F28595C"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/InvoiceAuditStateMachine/Resource"
   }
  },
  "UiRepository74A54B7D": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": {
     "Fn::Join": [
      "",
      [
       "invoice-ui-",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     },
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/UiRepository/Resource"
   }
  },
  "UiRepositoryAutoDeleteImagesCustomResourceF78F5ED0": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "UiRepository74A54B7D"
    }
   },
   "DependsOn": [
    "UiRepository74A54B7D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/UiRepository/AutoDeleteImagesCustomResource/Default"
   }
  },
  "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ecr:BatchDeleteImage",
          "ecr:DescribeRepositories",
          "ecr:ListImages",
          "ecr:ListTagsForResource"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ecr:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":repository/*"
            ]
           ]
          }
         ],
         "Condition": {
          "StringEquals": {
           "ecr:ResourceTag/aws-cdk:auto-delete-images": "true"
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/Custom::ECRAutoDeleteImagesCustomResourceProvider/Role"
   }
  },
  "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e024e432dbd64a0923f6308842181e502c39dd8287ee2dbae98472ec78a5097f.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting images in ",
       {
        "Ref": "UiRepository74A54B7D"
       },
       " repository."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/Custom::ECRAutoDeleteImagesCustomResourceProvider/Handler",
    "aws:asset:path": "asset.e024e432dbd64a0923f6308842181e502c39dd8287ee2dbae98472ec78a5097f",
    "aws:asset:property": "Code"
   }
  },
  "UiAppRunnerServiceRole4742D0C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "tasks.apprunner.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/UiAppRunnerServiceRole/Resource"
   }
  },
  "UiAppRunnerServiceRoleDefaultPolicy40BCB240": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "IngestionBucket917A3A3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IngestionBucket917A3A3A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "states:StartExecution",
        "states:DescribeExecution"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "InvoiceAuditStateMachine780A2967"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UiRepository74A54B7D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UiAppRunnerServiceRoleDefaultPolicy40BCB240",
    "Roles": [
     {
      "Ref": "UiAppRunnerServiceRole4742D0C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/UiAppRunnerServiceRole/DefaultPolicy/Resource"
   }
  },
  "UiAppRunnerService": {
   "Type": "AWS::AppRunner::Service",
   "Properties": {
    "HealthCheckConfiguration": {
     "HealthyThreshold": 1,
     "Interval": 30,
     "Path": "/",
     "Protocol": "HTTP",
     "Timeout": 10,
     "UnhealthyThreshold": 3
    },
    "InstanceConfiguration": {
     "Cpu": "2 vCPU",
     "Memory": "4 GB"
    },
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "invoice-ui-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    },
    "SourceConfiguration": {
     "AuthenticationConfiguration": {
      "AccessRoleArn": {
       "Fn::GetAtt": [
        "UiAppRunnerServiceRole4742D0C0",
        "Arn"
       ]
      }
     },
     "AutoDeploymentsEnabled": true,
     "ImageRepository": {
      "ImageConfiguration": {
       "Port": "8501",
       "RuntimeEnvironmentVariables": [
        {
         "Name": "INGESTION_BUCKET",
         "Value": {
          "Ref": "IngestionBucket917A3A3A"
         }
        },
        {
         "Name": "REPORTS_BUCKET",
         "Value": {
          "Ref": "IngestionBucket917A3A3A"
         }
        },
        {
         "Name": "STATE_MACHINE_ARN",
         "Value": {
          "Ref": "InvoiceAuditStateMachine780A2967"
         }
        },
        {
         "Name": "AWS_DEFAULT_REGION",
         "Value": {
          "Ref": "AWS::Region"
         }
        }
       ]
      },
      "ImageIdentifier": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2f88b2b95250256ee3b7ca5a21e9841909770c2130bfc3b6a697540e20239d79"
      },
      "ImageRepositoryType": "ECR"
     }
    },
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/UiAppRunnerService"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300,
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Prototype"
     },
     {
      "Key": "Owner",
      "Value": "GRT-Hackathon-Team8"
     },
     {
      "Key": "Project",
      "Value": "MSA-Invoice-Auditing"
     }
    ]
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRTW/CMAz9LbuHDNbDzoNpEtLQKrZ7FVIDXpukilMmVOW/z03K18nv2U9+z8mLXMzncv6k/mim62bW4k4O30HpRnCrGqiQw7LXDQSx2tsJ5VK6FvX51p54JktFEEWrzK5WcmBNCd4gETorPnqrwwi4fcFR1GerjKvZ/kftWhiHCUSByshh63Iv1Zt1RlFQUSkiCCTfxiIoQLefdlMVFDUkP1OatT25Bh4FnPDoUIPgywNslD6iTW73PArQnoNA5wiD88n/jt1gPp7Vl0zvjt/Er406QI6nus731oKXown4E5tHseopOLMFcr3X+dorfhiV3p2wBi/SNg55QHsQV7FO4spPnORVzyu/+tD16TdXztZ4+YgNR+IlUZTncHT2uZCLQr4+/RLijKMGNCC3uf4DPQLp1jQCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MSAInvoiceAuditFullStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "IngestionBucketName": {
   "Description": "S3 bucket for invoice ingestion",
   "Value": {
    "Ref": "IngestionBucket917A3A3A"
   }
  },
  "MsaRatesTableName": {
   "Description": "DynamoDB table for MSA rates",
   "Value": {
    "Ref": "MsaRatesTable67DF6646"
   }
  },
  "StateMachineArn": {
   "Description": "Invoice audit workflow state machine ARN",
   "Value": {
    "Ref": "InvoiceAuditStateMachine780A2967"
   }
  },
  "AppRunnerUrl": {
   "Description": "URL of the Streamlit UI hosted on App Runner",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "UiAppRunnerService",
        "ServiceUrl"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Mappings": {
  "ServiceprincipalMap": {
   "af-south-1": {
    "states": "states.af-south-1.amazonaws.com"
   },
   "ap-east-1": {
    "states": "states.ap-east-1.amazonaws.com"
   },
   "ap-northeast-1": {
    "states": "states.ap-northeast-1.amazonaws.com"
   },
   "ap-northeast-2": {
    "states": "states.ap-northeast-2.amazonaws.com"
   },
   "ap-northeast-3": {
    "states": "states.ap-northeast-3.amazonaws.com"
   },
   "ap-south-1": {
    "states": "states.ap-south-1.amazonaws.com"
   },
   "ap-south-2": {
    "states": "states.ap-south-2.amazonaws.com"
   },
   "ap-southeast-1": {
    "states": "states.ap-southeast-1.amazonaws.com"
   },
   "ap-southeast-2": {
    "states": "states.ap-southeast-2.amazonaws.com"
   },
   "ap-southeast-3": {
    "states": "states.ap-southeast-3.amazonaws.com"
   },
   "ap-southeast-4": {
    "states": "states.ap-southeast-4.amazonaws.com"
   },
   "ca-central-1": {
    "states": "states.ca-central-1.amazonaws.com"
   },
   "cn-north-1": {
    "states": "states.cn-north-1.amazonaws.com"
   },
   "cn-northwest-1": {
    "states": "states.cn-northwest-1.amazonaws.com"
   },
   "eu-central-1": {
    "states": "states.eu-central-1.amazonaws.com"
   },
   "eu-central-2": {
    "states": "states.eu-central-2.amazonaws.com"
   },
   "eu-north-1": {
    "states": "states.eu-north-1.amazonaws.com"
   },
   "eu-south-1": {
    "states": "states.eu-south-1.amazonaws.com"
   },
   "eu-south-2": {
    "states": "states.eu-south-2.amazonaws.com"
   },
   "eu-west-1": {
    "states": "states.eu-west-1.amazonaws.com"
   },
   "eu-west-2": {
    "states": "states.eu-west-2.amazonaws.com"
   },
   "eu-west-3": {
    "states": "states.eu-west-3.amazonaws.com"
   },
   "il-central-1": {
    "states": "states.il-central-1.amazonaws.com"
   },
   "me-central-1": {
    "states": "states.me-central-1.amazonaws.com"
   },
   "me-south-1": {
    "states": "states.me-south-1.amazonaws.com"
   },
   "sa-east-1": {
    "states": "states.sa-east-1.amazonaws.com"
   },
   "us-east-1": {
    "states": "states.us-east-1.amazonaws.com"
   },
   "us-east-2": {
    "states": "states.us-east-2.amazonaws.com"
   },
   "us-gov-east-1": {
    "states": "states.us-gov-east-1.amazonaws.com"
   },
   "us-gov-west-1": {
    "states": "states.us-gov-west-1.amazonaws.com"
   },
   "us-iso-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-iso-west-1": {
    "states": "states.amazonaws.com"
   },
   "us-isob-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-west-1": {
    "states": "states.us-west-1.amazonaws.com"
   },
   "us-west-2": {
    "states": "states.us-west-2.amazonaws.com"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}